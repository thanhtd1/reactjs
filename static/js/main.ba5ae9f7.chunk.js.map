{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","this","Component","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","type","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"sRAEMA,G,MAAc,WAChB,OACE,+BACE,4BACE,oCACA,oCACA,0CAMFC,EAAY,SAAAC,GAChB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,wBAAIC,IAAKD,GACL,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACE,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAKd,OACE,+BACKJ,IAmBIU,E,iLAZF,IAAD,EACwCC,KAAKZ,MAAzCE,EADJ,EACIA,cAAeQ,EADnB,EACmBA,gBAEvB,OACQ,+BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,S,GAR1DG,a,OC/BCC,E,YACjB,WAAYd,GAAQ,IAAD,8BACf,4CAAMA,KAQVe,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBV,EADY,EACZA,KAAMW,EADM,EACNA,MAEd,EAAKC,SAAL,eACGZ,EAAOW,KAbK,EAiBnBE,WAAa,WACX,EAAKpB,MAAMqB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAjBjB,EAAKA,aAAe,CAChBhB,KAAM,GACNC,IAAK,IAET,EAAKc,MAAQ,EAAKC,aANH,E,sEAsBT,IAAD,EACiBX,KAAKU,MAAnBf,EADH,EACGA,KAAMC,EADT,EACSA,IAEd,OACE,8BACE,uCAAmB,6BACnB,2BACEgB,KAAK,OACLjB,KAAK,OACLW,MAAOX,EACPkB,SAAUb,KAAKG,eAAgB,6BACjC,sCAAkB,6BAClB,2BACES,KAAK,OACLjB,KAAK,MACLW,MAAOV,EACPiB,SAAUb,KAAKG,eAAgB,6BAC/B,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASG,KAAKQ,kB,GAxC9BP,aC4DnBa,E,2MAtDbJ,MAAQ,CACNK,WAAY,I,EAGdjB,gBAAkB,SAAAL,GAAU,IAClBsB,EAAe,EAAKL,MAApBK,WAER,EAAKR,SAAS,CACZQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAMzB,Q,EAKnBgB,aAAe,SAAAQ,GACb,EAAKV,SAAS,CAAEQ,WAAW,GAAD,mBAAM,EAAKL,MAAMK,YAAjB,CAA6BE,O,wEAGhD,IAwBCF,EAAef,KAAKU,MAApBK,WAER,OACE,yBAAKI,UAAU,aACZ,kBAAC,EAAD,CAAO7B,cAAeyB,EAAYjB,gBAAiBE,KAAKF,kBACxD,kBAAC,EAAD,CAAOW,aAAcT,KAAKS,oB,GAjDjBR,aCAlBmB,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,W","file":"static/js/main.ba5ae9f7.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Jobs</th>\r\n          <th>Remove</th>\r\n        </tr>\r\n      </thead>\r\n    )\r\n  }\r\n\r\n  const TableBody = props => {\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                  <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n    return (\r\n      <tbody>\r\n          {rows}\r\n      </tbody>\r\n    )\r\n  }\r\n\r\nclass Table extends Component {\r\n\r\n   render() {\r\n        const { characterData, removeCharacter  } = this.props\r\n       \r\n        return (\r\n                <table>\r\n                    <TableHeader/>\r\n                    <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\r\n                </table>\r\n        )\r\n   }\r\n}\r\n\r\nexport default Table;","import React, {Component} from 'react';\r\n\r\nexport default class Form extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.initialState = {\r\n            name: '',\r\n            job: '',\r\n        }\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target\r\n      \r\n        this.setState({\r\n          [name]: value,\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n      this.props.handleSubmit(this.state)\r\n      this.setState(this.initialState)\r\n    }\r\n\r\n    render() {\r\n        const { name, job } = this.state;\r\n      \r\n        return (\r\n          <form>\r\n            <label>Name</label><br/>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange} /><br/>\r\n            <label>Job</label><br/>\r\n            <input\r\n              type=\"text\"\r\n              name=\"job\"\r\n              value={job}\r\n              onChange={this.handleChange} /><br/>\r\n              <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n          </form>\r\n        );\r\n      }\r\n\r\n}","import React, {Component} from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends Component {\n\n  state = {\n    characters: [],\n  }\n\n  removeCharacter = index => {\n    const { characters } = this.state\n  \n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      }),\n    })\n  }\n\n  handleSubmit = character => {\n    this.setState({ characters: [...this.state.characters, character] })\n  }\n\n  render() {\n    // Use props\n\n    // const characters = [\n    //   {\n    //     name: 'Charlie',\n    //     job: 'Janitor',\n    //   },\n    //   {\n    //     name: 'Mac',\n    //     job: 'Bouncer',\n    //   },\n    //   {\n    //     name: 'Dee',\n    //     job: 'Aspring actress',\n    //   },\n    //   {\n    //     name: 'Dennis',\n    //     job: 'Bartender',\n    //   },\n    // ]\n\n    // Using state\n\n    const { characters } = this.state\n\n    return (\n      <div className=\"container\">\n         <Table characterData={characters} removeCharacter={this.removeCharacter} />\n         <Form  handleSubmit={this.handleSubmit}/>\n      </div>\n     )\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}